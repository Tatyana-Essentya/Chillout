// <auto-generated />
using System;
using Chillout.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Chillout.Migrations
{
    [DbContext(typeof(Chillout.DataAccess.Context.DbContext))]
    partial class DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Chillout.DataAccess.Core.Models.HistoryGameRto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AdditionMoney")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateTimeStamp")
                        .HasColumnType("TEXT");

                    b.Property<int>("LeftUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RightUserId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WinnerUserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("LeftUserId");

                    b.HasIndex("RightUserId");

                    b.HasIndex("WinnerUserId");

                    b.ToTable("HistoryGame");
                });

            modelBuilder.Entity("Chillout.DataAccess.Core.Models.UserRto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Balance")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxWinCountAce")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nickname")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Chillout.DataAccess.Core.Models.HistoryGameRto", b =>
                {
                    b.HasOne("Chillout.DataAccess.Core.Models.UserRto", "LeftUser")
                        .WithMany("HistoryGamesLeftUser")
                        .HasForeignKey("LeftUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chillout.DataAccess.Core.Models.UserRto", "RightUser")
                        .WithMany("HistoryGamesRightUser")
                        .HasForeignKey("RightUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Chillout.DataAccess.Core.Models.UserRto", "WinnerUser")
                        .WithMany("HistoryGamesWinnerUser")
                        .HasForeignKey("WinnerUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
